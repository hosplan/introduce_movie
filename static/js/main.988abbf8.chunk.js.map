{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","useState","count","setCount","cardBackground","setBg","className","src","alt","style","height","map","genre","index","marginRight","minHeight","maxHeight","onClick","overflowY","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","console","log","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAyEeA,MAjEf,YAA2D,IAA3CC,EAA0C,EAA1CA,GAAIC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC9C,EAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,sBAAzC,mBAAOG,EAAP,KAAuBC,EAAvB,KAEA,OACI,qBAAKC,UAAU,qBAAf,SACI,sBAAKA,UAAU,cAAf,UACI,qBAAKC,IAAKR,EAAQO,UAAU,eAAeE,IAAKX,EAAOA,MAAOA,EAAOY,MAAO,CAAEC,OAAO,UACrF,sBAAKJ,UAAWF,EAAgBT,GAAIA,EAApC,UACKK,EAAOW,KAAI,SAACC,EAAOC,GAAR,OACR,sBAAkBP,UAAU,qBAAqBG,MAAO,CAAEK,YAAY,UAAtE,SAAkFF,GAAvEC,MAEf,qBAAKJ,MAAO,CAAEM,UAAU,MAAOC,UAAU,OAAzC,SACI,oBAAIV,UAAU,kBAAd,SACKT,MAIT,qBAAIS,UAAU,8BAAd,UACI,oBAAIA,UAAU,kBAAd,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,wBAAQA,UAAU,eAAeW,QAAS,kBAAMZ,EAAyB,uBAAnBD,EAAwC,qBAAqB,uBAAnH,SACI,cAAC,IAAD,QAGR,qBAAKE,UAAU,kBAAf,SACI,wBAAQA,UAAU,eAAeW,QAAS,kBAAMd,EAASD,EAAM,IAA/D,SACI,cAAC,IAAD,CAAaI,UAAU,0BAKvC,qBAAIA,UAAU,kBAAd,UACI,cAAC,IAAD,CAAaA,UAAU,eAAeG,MAAO,CAACK,YAAY,YAD9D,UAEW,sBAAMR,UAAU,gCAAhB,SAAiDJ,OAE5D,qBAAII,UAAU,kBAAd,UACI,cAAC,IAAD,CAAYA,UAAU,eAAeG,MAAO,CAACK,YAAY,YAD7D,kBAEUlB,KAEV,oBAAIU,UAAU,kBAAd,SACI,qBAAKG,MAAO,CAAEM,UAAU,MAAOC,UAAU,MAAOE,UAAU,QAA1D,SACI,oBAAGZ,UAAU,YAAb,UACKR,EAAQqB,MAAM,EAAE,KADrB,yBCFjBC,E,4MA5CbC,MAAQ,CACNC,WAAY,EACZC,OAAS,I,EAGXC,U,sBAAY,8BAAAC,EAAA,sEAC4BC,IAAMC,IAAI,yDADtC,gBACUJ,EADV,EACHK,KAAOA,KAAML,OAGpBM,QAAQC,IAAI,CAACP,WAGb,EAAKQ,SAAS,CAACR,SAAQD,WAAW,IAPxB,2C,uDAUZ,WACEU,KAAKR,c,oBAGP,WACE,MAA6BQ,KAAKX,MAA1BC,EAAR,EAAQA,UAAUC,EAAlB,EAAkBA,OAClB,OACED,EACC,qBAAKhB,UAAU,SAAf,SACG,sBAAMA,UAAU,cAAhB,0BAGFiB,EAAOZ,KACN,SAAAsB,GAAK,OACJ,cAAC,EAAD,CACMtC,GAAIsC,EAAMtC,GACVC,KAAMqC,EAAMrC,KACZC,MAAOoC,EAAMpC,MACbC,QAASmC,EAAMnC,QACfC,OAAQkC,EAAMC,mBACdlC,OAAUiC,EAAMjC,QANViC,EAAMtC,W,GA9BVwC,IAAMC,W,MCAxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,qBAAKjC,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,UAINkC,SAASC,eAAe,W","file":"static/js/main.988abbf8.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\nimport { BsCalendar, BsFillAlarmFill, BsHeart, BsHeartFill, BsSkipStart, BsStar, BsStarFill } from \"react-icons/bs\";\r\n\r\nfunction Test(id){\r\n    console.log(id);\r\n}\r\nfunction Movie({id, year, title, summary, poster, genres}){\r\n    const [count, setCount] = useState(0);\r\n    const [cardBackground, setBg] = useState(\"card-body bg-white\");\r\n\r\n    return(\r\n        <div className=\"col-sm-4 mt-3 mb-3\">\r\n            <div className=\"card shadow\">\r\n                <img src={poster} className=\"card-img top\" alt={title} title={title} style={{ height:'60vh'}}  />\r\n                <div className={cardBackground} id={id}>\r\n                    {genres.map((genre, index) => \r\n                        <span key={index} className=\"badge bg-info  p-2\" style={{ marginRight:'0.1rem'}}>{genre}</span>\r\n                    )}\r\n                    <div style={{ minHeight:'5vh', maxHeight:'5vh'}}>\r\n                        <h5 className=\"card-title mt-2\">\r\n                            {title}               \r\n                        </h5>\r\n                    </div>\r\n                    \r\n                    <ul className=\"list-group list-group-flush\">\r\n                        <li className=\"list-group-item\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-center\">\r\n                                    <button className=\"btn btn-link\" onClick={() => setBg(cardBackground === 'card-body bg-light'?'card-body bg-white':'card-body bg-light')}>\r\n                                        <BsStarFill />\r\n                                    </button>                                                                  \r\n                                </div>\r\n                                <div className=\"col text-center\">\r\n                                    <button className=\"btn btn-link\" onClick={() => setCount(count+1)}>\r\n                                        <BsHeartFill className=\"text-success\"/>\r\n                                    </button>                                       \r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <BsHeartFill className='text-success' style={{marginRight:'0.2rem'}}/>\r\n                            Like : <span className=\"badge bg-success rounded-pill\">{count}</span>\r\n                        </li>                        \r\n                        <li className=\"list-group-item\">\r\n                            <BsCalendar className='text-primary' style={{marginRight:'0.2rem'}} />\r\n                            년도 : {year}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <div style={{ minHeight:'9vh', maxHeight:'9vh', overflowY:'auto'}}>                               \r\n                                <p className=\"card-text\">\r\n                                    {summary.slice(0,100)}...\r\n                                    {/* <button type=\"button\" className=\"btn btn-link btn-sm\">펼처보기</button> */}\r\n                                </p>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>              \r\n            </div>\r\n        </div> \r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year : PropTypes.number.isRequired,\r\n    title : PropTypes.string.isRequired,\r\n    summary : PropTypes.string.isRequired,\r\n    poster : PropTypes.string.isRequired,\r\n    genres : PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\n\nclass App extends React.Component{\n  state = {\n    isLoading : true,\n    movies : []\n  };\n\n  getMovies = async () =>{\n    const {data: {data:{movies}}} = await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=rating\");\n    \n    //console.log(movies.data.data.movies);\n    console.log({movies});\n    //왼쪽꺼는 state의 movies 오른쪽은 axios의 movies\n    //this.setState({movies:movies});\n    this.setState({movies, isLoading: false});\n  };\n\n  componentDidMount(){\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading,movies } = this.state;\n    return(\n      isLoading ? \n      (<div className=\"loader\">\n          <span className=\"loader_text\">Loading...</span>\n      </div>) :\n      (\n        movies.map\n        (movie => \n          <Movie key={movie.id} \n                id={movie.id} \n                year={movie.year} \n                title={movie.title} \n                summary={movie.summary} \n                poster={movie.medium_cover_image}\n                genres = {movie.genres}                       \n          />\n        )\n      )           \n    ) \n    \n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nReactDOM.render(  \n  <React.StrictMode>\n    <div className=\"container\">\n      <div className=\"row\">\n        <App />\n      </div>      \n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}